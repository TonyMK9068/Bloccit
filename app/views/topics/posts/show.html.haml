.jumbotron
  .row
    #title= markdown @post.title

.btn-group
  -if can? :edit, @post
    %button.btn.btn-sm.btn-default= link_to "Edit Post", edit_topic_post_path(@topic,@post)

  - if can? :delete, @post
    %button.btn.btn-sm.btn-danger= link_to "Delete Post", [@topic, @post], method: :delete, confirm: 'Are you sure you want to delete this post?'

%div
  %h3= pluralize(@post.points, 'point')
  %small
    = pluralize(@post.up_votes, 'up vote') 
    = pluralize(@post.down_votes, 'down vote')

= render partial: 'favorites/favorite', locals: { topic: @topic, post: @post}

.container
  .media.post-text
    = render partial: 'votes/voter', locals: { topic: @topic, post: @post }
    .pull-right.media-object
      = image_tag(@post.image) if @post.image?

    .media-body.lead
      .media-heading
        - if @post.user.avatar?
          = image_tag(@post.user.avatar.small.url)
        %strong
          %small Post submitted #{time_ago_in_words(@post.created_at)} ago by
        = @post.user.name
        = markdown @post.body
        <br>

.container
  .row
    .col-md-4
      %h2.js-comments-count #{@comments.count} Comments
      .js-comments  
        = render partial: 'comments/comment', collection: @comments
        = will_paginate @comments

    .col-sm-4.offset-col-sm-2
      - if can? :create, Comment
        %hr
        %a.js-show-hide{:href => '#', :data => {:selector => "js-new-comment"}} Add Comment
        .js-new-comment.hide
          %h4 New Comment
          = render partial: 'comments/form', locals: { topic: @topic, post: @post, comment: Comment.new }

